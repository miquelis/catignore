# Name of the workflow
name: Release Golang Binary

on:
  push:
  pull_request:
    branches:
      - "master"

# Automatically create a GitHub Release, with release details specified (the relevant commits)
jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    environment: "prod"

    # Created outputs to send to jobs build
    outputs:
      tag_version: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - name: Check out code into the go module directory
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "master"

      - name: Create a gitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build:
    name: "Build golang binary"
    runs-on: "ubuntu-latest"
    needs: release
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build golang binary
        uses: wangyoucao577/go-release-action@v1.23
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.16
          build_flags: -v
          ldflags: -X 'github.com/${{ github.repository }}/cmd.VERSION=${{ needs.release.outputs.tag_version }}'
          release_tag: ${{ needs.release.outputs.tag_version }}
